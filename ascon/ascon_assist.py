from cao_pylib import sbox_model
from cao_pylib import operation


ascon_cnf0="(8'+10)(6'+10)(4'+10)(0'+10)(1+3+5+6+9+10')(3'+10)(0'+1)(2'+3)(4'+5)(6'+7)(8'+9)(0+1'+3+4+5'+6+9+10')(10'+11)(1'+5'+9'+10)(1+5+9'+10)(7'+9'+10+11')(7+9'+11)(1+5'+9+10)(1'+5+9+10)(7+9+10+11')(7'+9+11)(1+3+4+5'+6+8+9'+10')(0+1'+3+5+6+8+9'+10')"
ascon_cnf1="(1+9'+11)(1'+9+11)(8'+10)(6'+10)(4'+10)(2'+10)(0'+10)(0'+1)(2'+3)(4'+5)(6'+7)(8'+9)(10'+11)(3+5'+10)(5+7'+10)(3'+7+10)(1'+9'+10+11')(1+9+10+11')(0+2+3'+4+5'+6+7'+8+10')(0+3+5+7+8+10')"
ascon_cnf2="(3+5'+11)(3'+5+11)(4'+10)(2'+10)(9'+10)(7'+10)(0'+1)(2'+3)(4'+5)(6'+7)(8'+9)(10'+11)(2+4+7+9+10')(3'+5'+10+11')(3+5+10+11')"
ascon_cnf3="(3+5'+11)(3'+5+11)(8'+10)(6'+10)(4'+10)(2'+10)(7+9'+10)(7'+9+10)(0'+1)(1'+10)(2'+3)(4'+5)(6'+7)(8'+9)(10'+11)(1+2+4+6+7'+8+9'+10')(1+2+4+7+9+10')(3'+5'+10+11')(3+5+10+11')"
ascon_cnf4="(6'+10)(8'+10)(0'+10)(2'+3)(1+3+6+9+10')(3'+10)(0'+1)(4'+5)(6'+7)(8'+9)(10'+11)(1+9'+10)(1'+7'+10+11')(1'+7+11)(7+9+10+11')(7'+9+11)(0+1'+3+6+8+9'+10')"

ascon_inv_cnf0="(0'+1)(2'+3)(4'+5)(6'+7)(8'+9)(9'+11)(10+11')(7'+11)(5'+11)(3'+11)(1'+11)(1+3+5+7+9+10')"
ascon_inv_cnf1="(3'+11)(2'+10)(9'+10)(7'+10)(1+2+5+7+9+10')(5'+10)(1'+10)(0'+1)(2'+3)(4'+5)(6'+7)(8'+9)(10'+11)(3+10+11')"
ascon_inv_cnf2="(0'+1)(2'+3)(4'+5)(6'+7)(8'+9)(9'+11)(10+11')(7'+11)(5'+11)(3'+11)(1'+11)(1+3+5+7+9+10')"
ascon_inv_cnf3="(7'+11)(6'+10)(9'+10)(5'+10)(1+3+5+6+9+10')(3'+10)(1'+10)(0'+1)(2'+3)(4'+5)(6'+7)(8'+9)(10'+11)(7+10+11')"
ascon_inv_cnf4="(0'+1)(2'+3)(4'+5)(6'+7)(8'+9)(9'+11)(10+11')(7'+11)(5'+11)(3'+11)(1'+11)(1+3+5+7+9+10')"

ascon_sbox_cnf0="(1+3+5+7'+11)(1+3+5'+7+11)(1'+3+5+7+11)(3'+7+9+11)(1+3+5+7+11')(1'+3+5'+7'+11)(3'+7'+9'+11)(2'+4'+10)(3+4'+10)(0'+2'+10)(0'+3+10)(2'+3)(0'+1)(4'+5)(1+5+6+8+9'+10')(3'+8'+10)(6'+10)(6'+7)(8'+9)(0+1'+4+5'+6+8+9'+10')(0+3+4+6+10')(2+3'+6+8+10')(10'+11)(3'+7'+9+10+11')(3'+7+9'+10+11')(1'+2'+5'+9+10)(1+2'+5+9+10)(1+2'+5'+9'+10)(1'+2'+5+9'+10)(1+4+5'+6+9+10')(0+1'+5+6+9+10')(1+3+5'+7'+10+11')(1'+3+5+7'+10+11')(1'+3+5'+7+10+11')"
ascon_sbox_cnf1="(1+3+5+7+9'+11)(1'+3+5+7+9+11)(1+3+5+7+9+11')(1+3'+5'+7'+9'+11)(1'+3'+5'+7'+9+11)(4'+6'+10)(2'+6'+10)(3+5+6'+10)(2'+4'+10)(3+4'+7+10)(2'+5+7+10)(8'+10)(0'+10)(4'+5)(6'+7)(0+3+4+5'+8+10')(0+2+3'+5+8+10')(0+3+6+7'+8+10')(0'+1)(2'+3)(0+5+6+7'+8+10')(0+2+3'+7+8+10')(0+4+5'+7+8+10')(8'+9)(10'+11)(0+2+4+6+8+10')(1+3+5'+9'+10+11')(1+5+7'+9'+10+11')(1+3'+7+9'+10+11')(1'+3+5'+9+10+11')(1'+5+7'+9+10+11')(1'+3'+7+9+10+11')(3'+5'+6'+10)(3'+4'+7'+10)(2'+5'+7'+10)(1'+3+5'+9'+11)(1'+5+7'+9'+11)(1'+3'+7+9'+11)(1+3+5'+9+11)(1+5+7'+9+11)(1+3'+7+9+11)(1'+3'+5'+7'+9'+10+11')(1+3'+5'+7'+9+10+11')(1'+3+5+7+9'+10+11')"
ascon_sbox_cnf2="(3+5+9+11)(3+5+7'+11)(3+5'+7+9'+11)(3'+5+7+9'+11)(3'+5'+9+11)(3'+5'+7'+11)(0'+1)(8'+9)(6'+9'+10)(4'+10)(2'+10)(2'+3)(4'+5)(6'+7)(2+4+9+10')(2+4+6+7'+10')(10'+11)(7+8'+10)(2+4+7+8+10')(3+5'+9+10+11')(3'+5+9+10+11')(3+5'+7'+10+11')(3'+5+7'+10+11')(3'+5'+7+9'+10+11')(3+5+7+9'+10+11')"
ascon_sbox_cnf3="(3+5+7+9'+11)(3+5+7'+9+11)(1+3+5'+7+9+11)(1+3'+5+7+9+11)(1+3+5+7+9+11')(1+3+5'+7'+9'+11)(1+3'+5+7'+9'+11)(1'+3+5+11)(3'+5'+7+9'+11)(3'+5'+7'+9+11)(0'+8'+10)(1+8'+10)(0'+6'+10)(1+6'+10)(0'+7+9+10)(1'+3'+5'+11)(0'+1)(6'+7)(8'+9)(4'+10)(2'+10)(0'+7'+9'+10)(2'+3)(4'+5)(2+4+7+8+9'+10')(2+4+6+7'+9+10')(0+1'+2+4+10')(10'+11)(1+2+4+6+8+10')(1'+3+5'+10+11')(1'+3'+5+10+11')(3+5'+7+9'+10+11')(3'+5+7+9'+10+11')(3+5'+7'+9+10+11')(3'+5+7'+9+10+11')(1+3'+5'+7'+9'+10+11')(1+3+5+7'+9'+10+11')(1+3'+5'+7+9+10+11')"
ascon_sbox_cnf4="(2'+8'+10)(1+3'+7+11)(3+7+9'+11)(3+7'+9+11)(3+8'+10)(3+7+9+11')(2'+3)(4'+5)(8'+9)(1'+3'+7'+11)(0'+1)(6'+7)(0+1'+6+9+10')(6'+10)(0'+3'+10)(0+2+3'+6+10')(10'+11)(3+6+8+10')(1+3'+7'+10+11')(1'+3'+7+10+11')(1'+2'+9'+10)(1+2'+9+10)(1+6+8+9'+10')(3+7'+9'+10+11')"

def ascon_linear(s,pos):
    #ascon的线性层一行s输入，求输出值
    rotate=[[0,19,28],[0,61,39],[0,1,6],[0,10,17],[0,7,41]]
    a=[]
    for i in range(64):
        a.append(eval(s[i]))
    a1=operation.roate_right(a,rotate[pos][1])
    a2=operation.roate_right(a,rotate[pos][2])
    for i in range(64):
        if 2 in [a[i],a1[i],a2[i]]:
            a[i]=2
        else:
            a[i]=a[i]^a1[i]^a2[i]
    ds=''
    for i in range(64):
        ds+=str(a[i])
    return ds


def ascon_linear_inv(s,pos):
    #s经过ascon的逆向的线性层的输出
    rotate_right=[  [0, 3, 6, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 24, 25, 27, 30, 33, 36, 38, 39, 41, 42, 44, 45, 47, 50, 53, 57, 60, 63],
                    [0, 1, 2, 3, 4, 8, 11, 13, 14, 16, 19, 21, 23, 24, 25, 27, 28, 29, 30, 35, 39, 43, 44, 45, 47, 48, 51, 53, 54, 55, 57, 60, 61],
                    [0, 2, 4, 6, 7, 10, 11, 13, 14, 15, 17, 18, 20, 23, 26, 27, 28, 32, 34, 35, 36, 37, 40, 42, 46, 47, 52, 58, 59, 60, 61, 62, 63],
                    [1, 2, 4, 6, 7, 9, 12, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 40, 42, 44, 47, 48, 49, 53, 58, 61, 63],
                    [0, 1, 2, 3, 4, 5, 9, 10, 11, 13, 16, 20, 21, 22, 24, 25, 28, 29, 30, 31, 35, 36, 40, 41, 44, 45, 46, 47, 48, 50, 53, 55, 60, 61, 63]]
    a=[]
    d=[]
    for i in range(64):
        a.append(eval(s[i]))
    for i in range(64):
        b=[]
        for j in rotate_right[pos]:
            b.append(a[(i-j+64)%64])
        
        c=0
        if 2 in b:
            c=2
        else:
            for j in range(len(b)):
                c=c^b[j]
        d.append(c)
    ds=''
    for i in range(64):
        ds+=str(d[i])
    return ds

sbox_model.gen_ine_from_cnf(ascon_sbox_cnf0,'ascon_sbox_0.ine')
sbox_model.gen_ine_from_cnf(ascon_sbox_cnf1,'ascon_sbox_1.ine')
sbox_model.gen_ine_from_cnf(ascon_sbox_cnf2,'ascon_sbox_2.ine')
sbox_model.gen_ine_from_cnf(ascon_sbox_cnf3,'ascon_sbox_3.ine')
sbox_model.gen_ine_from_cnf(ascon_sbox_cnf4,'ascon_sbox_4.ine')

fp=open('ascon4.csv','r')
s=fp.read()
fp.close()

s=s.split('\n')
s=s[1:len(s)-1]
for i in range(len(s)):
    s[i]=s[i].split(',')
    s[i]=s[i][:12]
    for j in range(12):
        s[i][j]=eval(s[i][j])

posspoint=[]
imposspoint=[]
for i in range(2**12):
    ibin=operation.num2binlist(12, i)
    if ibin not in s:
        imposspoint.append(ibin)
    else:
        posspoint.append(ibin)

sbox_model.test_ine_of_sbox('ascon/ascon_sbox_4.ine', posspoint, imposspoint)
from cao_pylib import sbox_model
from cao_pylib import cipher_sbox
from cao_pylib import sbox
from cao_pylib import operation
import string

cnf=["(0'+14)(6'+12)(4'+12)(3'+12)(2'+3)(0+3+5+7+14')(1'+12)(3'+14)(0'+1)(4'+5)(6'+7)(14'+15)(11+15')(8+9')(9+10')(10+11')(12'+13)(5+7'+14)(1+3+4+6+12')(7+8'+15)(12+13'+14)(7+13+15')(4'+15)(13+14')(6'+15)(11+13')(5'+13+15)(5'+13'+14+15')(0+3+4+5'+6+7'+14')",
"(0'+14)(6'+12)(4'+12)(3'+12)(2'+3)(0+3+5+7+14')(1'+12)(3'+14)(0'+1)(4'+5)(6'+7)(14'+15)(11+15')(8+9')(9+10')(10+11')(12'+13)(5+7'+14)(1+3+4+6+12')(7+8'+15)(12+13'+14)(7+13+15')(4'+15)(13+14')(6'+15)(11+13')(5'+13+15)(5'+13'+14+15')(0+3+4+5'+6+7'+14')",
"(0'+10)(6'+14)(4'+14)(3'+14)(2'+3)(0+3+5+7+10')(3'+10)(1'+14)(0'+1)(4'+5)(6'+7)(14'+15)(13+15')(8+9')(9+12')(12+13')(7+8'+11)(5+7'+10)(0+3+4+5'+6+7'+10')(10'+11)(5'+11+15)(7+11'+15)(1+3+4+6+14')(10'+15)(5'+10+11'+15')(10+14+15')(11'+13)(6'+11)(4'+11)",
"(0'+8)(6'+14)(4'+14)(3'+14)(2'+3)(0+3+5+7+8')(3'+8)(1'+14)(0'+1)(4'+5)(6'+7)(14'+15)(13+15')(10+11')(11+12')(12+13')(7+9+10')(5+7'+8)(0+3+4+5'+6+7'+8')(8'+9)(5'+9+15)(7+9'+15)(1+3+4+6+14')(8'+15)(5'+8+9'+15')(8+14+15')(9'+13)(6'+9)(4'+9)",
"(0'+10)(6'+14)(4'+14)(3'+14)(2'+3)(0+3+5+7+10')(3'+10)(1'+14)(0'+1)(4'+5)(6'+7)(14'+15)(13+15')(8+9')(9+12')(12+13')(7+8'+11)(5+7'+10)(0+3+4+5'+6+7'+10')(10'+11)(5'+11+15)(7+11'+15)(1+3+4+6+14')(10'+15)(5'+10+11'+15')(10+14+15')(11'+13)(6'+11)(4'+11)",
"(0'+8)(6'+12)(4'+12)(3'+12)(2'+3)(0+3+5+7+8')(3'+8)(1'+12)(0'+1)(4'+5)(6'+7)(12'+13)(13'+15)(10+11')(11+14')(14+15')(7+9+10')(5+7'+8)(0+3+4+5'+6+7'+8')(8'+9)(5'+9+13)(7+9'+13)(8'+13)(1+3+4+6+12')(5'+8+9'+13')(8+12+13')(9'+15)(6'+9)(4'+9)",
"(0'+14)(6'+12)(4'+12)(3'+12)(2'+3)(0+3+5+7+14')(1'+12)(3'+14)(0'+1)(4'+5)(6'+7)(14'+15)(11+15')(8+9')(9+10')(10+11')(12'+13)(5+7'+14)(1+3+4+6+12')(7+8'+15)(12+13'+14)(7+13+15')(4'+15)(13+14')(6'+15)(11+13')(5'+13+15)(5'+13'+14+15')(0+3+4+5'+6+7'+14')",
"(0'+12)(6'+14)(4'+14)(3'+14)(2'+3)(0+3+5+7+12')(3'+12)(1'+14)(0'+1)(4'+5)(6'+7)(14'+15)(11+15')(8+9')(9+10')(10+11')(7+8'+13)(5+7'+12)(0+3+4+5'+6+7'+12')(12'+13)(5'+13+15)(7+13'+15)(1+3+4+6+14')(12'+15)(5'+12+13'+15')(12+14+15')(11+13')(6'+13)(4'+13)"]
cnf_invert=["(1'+9)(3'+11)(0'+8)(2'+10)(7'+8)(1'+10)(5'+8)(7'+10)(0'+1)(2'+3)(4'+5)(6'+7)(1+2+7+10')(0+5+7+8')(12+13')(13+14')(14+15')(11'+15)(8'+9)(9'+15)(10'+11)(3+10+11')(1+8+9')(8+11+12')",
"(1'+9)(3'+11)(0'+8)(2'+10)(7'+8)(1'+10)(5'+8)(7'+10)(0'+1)(2'+3)(4'+5)(6'+7)(1+2+7+10')(0+5+7+8')(12+13')(13+14')(14+15')(11'+15)(8'+9)(9'+15)(10'+11)(3+10+11')(1+8+9')(8+11+12')",
"(1'+9)(5'+11)(0'+8)(4'+10)(3'+8)(1'+10)(7'+8)(3'+10)(0'+1)(2'+3)(1+3+4+10')(4'+5)(6'+7)(0+3+7+8')(12+13')(13+14')(14+15')(11'+15)(8'+9)(9'+15)(10'+11)(5+10+11')(1+8+9')(8+11+12')",
"(3'+9)(5'+11)(2'+8)(4'+10)(1'+8)(3'+10)(7'+8)(1'+10)(0'+1)(2'+3)(1+3+4+10')(4'+5)(6'+7)(1+2+7+8')(12+13')(13+14')(14+15')(11'+15)(8'+9)(9'+15)(10'+11)(5+10+11')(3+8+9')(8+11+12')",
"(5'+9)(1'+11)(4'+8)(0'+10)(3'+8)(5'+10)(7'+8)(3'+10)(0'+1)(2'+3)(4'+5)(0+3+5+10')(6'+7)(3+4+7+8')(12+13')(13+14')(14+15')(11'+15)(8'+9)(9'+15)(10'+11)(1+10+11')(5+8+9')(8+11+12')",
"(3'+9)(7'+11)(2'+8)(6'+10)(1'+8)(3'+10)(5'+8)(1'+10)(0'+1)(2'+3)(1+3+6+10')(4'+5)(1+2+5+8')(6'+7)(12+13')(13+14')(14+15')(11'+15)(8'+9)(9'+15)(10'+11)(7+10+11')(3+8+9')(8+11+12')",
"(1'+9)(3'+11)(0'+8)(2'+10)(7'+8)(1'+10)(5'+8)(7'+10)(0'+1)(2'+3)(4'+5)(6'+7)(1+2+7+10')(0+5+7+8')(12+13')(13+14')(14+15')(11'+15)(8'+9)(9'+15)(10'+11)(3+10+11')(1+8+9')(8+11+12')",
"(1'+9)(3'+11)(0'+8)(2'+10)(5'+8)(1'+10)(7'+8)(5'+10)(0'+1)(2'+3)(4'+5)(1+2+5+10')(6'+7)(0+5+7+8')(12+13')(13+14')(14+15')(11'+15)(8'+9)(9'+15)(10'+11)(3+10+11')(1+8+9')(8+11+12')"]

cnf8="(0+1+5'+6)(0+4'+6+7)(0'+4+6+7)(1'+3+4'+6'+7)(0+1'+5+6)(0'+1+2'+6'+7')(0+1+2+6'+7)(0'+1+3'+6'+7)(1'+3'+4+6'+7)(0+1+2'+3'+7')(0+1+2+3+7')(0+2'+3'+5'+6'+7')(0+2+3+5'+6'+7')(0'+1'+2'+4+5+7')(0'+1+4'+5+6+7')(0'+2+4+5+6)(0+1+2'+3+7)(0+2'+3+5'+6'+7)(0'+1'+2'+4'+5'+7')(0+1'+2+3'+5+7')(0'+2+4'+5'+6+7')(1+4+5'+6)(0+1'+2'+3+5+7')(0'+1'+2+4'+5+6'+7')(1+3+4'+6+7)(0'+1'+2+4+5'+6'+7')(3'+4+5+6+7)(0+1'+2'+4'+5+7)(0+2+4+5+6'+7)(0+2+4'+5'+7)"
cnf9="(0+1+5'+7)(0+4'+6+7)(0'+4+6+7)(1'+3+4'+6+7')(0+1'+5+7)(0'+1+2'+6'+7')(0+1+2+6+7')(0'+1+3'+6+7')(1'+3'+4+6+7')(0+1+2'+3'+6')(0+1+2+3+6')(0+2'+3'+5'+6'+7')(0+2+3+5'+6'+7')(0'+1'+2'+4+5+6')(0+1+2'+3+6)(0'+1+4'+5+6'+7)(0'+2+4+5+7)(0+2'+3+5'+6+7')(0'+1'+2'+4'+5'+6')(0+1'+2+3'+5+6')(0'+2+4'+5'+6'+7)(1+4+5'+7)(0+1'+2'+3+5+6')(0'+1'+2+4'+5+6'+7')(1+3+4'+6+7)(0'+1'+2+4+5'+6'+7')(3'+4+5+6+7)(0+1'+2'+4'+5+6)(0+2+4+5+6+7')(0+2+4'+5'+6)"
#sbox_model.gen_ine_from_cnf(cnf8, 'lblock//ine//sbox_ine8.txt')
#sbox_model.gen_ine_from_cnf(cnf9, 'lblock//ine//sbox_ine9.txt')

s='1001 1110 0010 0110 0010 1101 1011 0100'

def bin2hex(s):
    s=s.split(' ')
    res=''
    for i in range(len(s)):
        res+=hex(eval('0b'+s[i]))[2:]
    print(str.upper(res))
print(str.lower("BBF9FF98"))

    